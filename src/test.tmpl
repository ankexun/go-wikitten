<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>{{.title}}</title>
    <!-- <base href="<?php echo BASE_URL; ?>/"> -->

    <link rel="shortcut icon" href="static/img/favicon.ico">

      {{if .USE_DARK_THEME}}
        <link rel="stylesheet" href="static/css/bootstrap_dark.min.css">
        <link rel="stylesheet" href="static/css/dark/prettify-dark.css">
        <link rel="stylesheet" href="static/css/codemirror.css">
        <link rel="stylesheet" href="static/css/main_dark.css">
        <link rel="stylesheet" href="static/css/dark/codemirror-tomorrow-night-bright.css">
      {{else}}
        <link rel="stylesheet" href="static/css/bootstrap.min.css">
        <link rel="stylesheet" href="static/css/prettify.css">
        <link rel="stylesheet" href="static/css/codemirror.css">
        <link rel="stylesheet" href="static/css/main.css">
      {{end}}
    <link rel="stylesheet" href="static/css/zTreeStyle.css">
		<link rel="stylesheet" href="static/css/custom.css">

      <!-- <meta name="description" content="<?php echo e($page['description']) ?>">
      <meta name="keywords" content="<?php echo e(join(',', $page['tags'])) ?>"> -->
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1">
  
      <!-- <?php if(!empty($page['author'])): ?>
          <meta name="author" content="<?php echo e($page['author']) ?>">
      <?php endif; ?> -->

      <script src="static/js/jquery.min.js"></script>
      <script src="static/js/prettify.js"></script>
      <script src="static/js/codemirror.min.js"></script>
      <script src="static/js/jquery.ztree.core.min.js"></script>
      <SCRIPT LANGUAGE="JavaScript">
        //处理树状菜单数据
            let data = {{.tree}}
            let ptree = []
            
            function sonsTree(obj, arr) {
                var children = new Array();
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i].pId == obj.id) {  //pid等于加入数组
                        arr[i].Name = arr[i].Name.split(obj.Name+'/')[1]
                        sonsTree(arr[i], arr);//递归出子元素
                        children.push(arr[i]);
                    }
                }
                if (children.length > 0) {
                    obj.children = children;
                }
                return obj;
            }
    
            let fristTitle = ''//最外层文件夹名称
            let outside = [] //目录
            let obj = {
                Name: null,
                IsDir: true,
                children: []
            }
            data.forEach( (e,index) => {
                e.id = index
                if ( e.Name.indexOf('/') == -1 ) {//最外层文件夹名称
                    fristTitle = e.Name
                }
                else {
                    e.Name = e.Name.split('myDoc/')[1]
                    obj.children.push(e)
                };
                if ( e.IsDir ) {
                    if ( e.Name != fristTitle ) {
                        outside.push(e)
                    }
                    
                }
            })
            obj.Name = fristTitle
            outside.forEach( (e,index) => {//目录
                obj.children.forEach ( (ele,ind) => {
                    if ( ele.Name.indexOf(e.Name) != -1 && ele.IsDir == false ) {
                        ele.pId = e.id
                    }
                })
            })
            for (var i = 0; i < obj.children.length; i++) {
                if (obj.children[i].pId == null) {//父元素
                    let o = sonsTree(obj.children[i], obj.children);
                    ptree.push(o);
                }
            }
            for ( var i = 0; i < ptree.length; i++ ) {
            if (ptree[i+1].Name.indexOf(ptree[i].Name) != -1){
                ptree[i+1].Name = ptree[i+1].Name.split(ptree[i].Name)[1]
                ptree[i].children = ptree[i+1]
                ptree[i].hasMoreChild = true
                ptree.splice(i+1,1)
                break
            }
        }
                
        var zTreeObj;
        // zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
        var setting = {
            view: {
        			  dblClickExpand: false
        			  },
            data: {
                key: {
                    name: "Name"
                },
                simpleData: {  
                    enable: true,
                }
            },
            callback:{
                onClick: onNodeClick   
            }
        };
        function onNodeClick(e,treeId, treeNode) { 
            // var zTree = $.fn.zTree.getZTreeObj("#treeDemo");  
            zTreeObj.expandNode(treeNode);  
        };
        // zTree 的数据属性，深入使用请参考 API 文档（zTreeNode 节点数据详解）
        var zNodes = ptree
        $(document).ready(function(){
           zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, zNodes);
        });
       </SCRIPT>
</head>
<body>
    <div><ul id="treeDemo" class="ztree"></ul></div>
</body>
</html>